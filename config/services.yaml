# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller/'
#        tags: ['controller.service_arguments']

    prooph_event_store.pdo_mysql_event_store:
        class: Prooph\EventStore\Pdo\MySqlEventStore
        arguments:
            - '@prooph_event_store.message_factory'
            - '@prooph_event_store.connection.doctrine_pdo_connection'
            - '@prooph_event_store.mysql.single_stream_strategy'

    prooph_event_store.mysql.single_stream_strategy:
        class: Prooph\EventStore\Pdo\PersistenceStrategy\MySqlSingleStreamStrategy

    Prooph\EventSourcing\EventStoreIntegration\AggregateTranslator: ~

    App\Wallet\Infrastructure\Persistence\Repository\WalletRepository:
        arguments:
            - '@prooph_event_store.pdo_mysql_event_store'

    prooph_event_store.connection.doctrine_pdo_connection:
        class: PDO
        factory: [ '@doctrine.dbal.default_connection', getNativeConnection ]

    _instanceof:
        App\Wallet\Infrastructure\CQRS\CommandHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: command.bus }
        App\Wallet\Infrastructure\CQRS\QueryHandlerInterface:
            tags:
                - { name: messenger.message_handler, bus: query.bus }
